version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: hotelna
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - hotelna-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  hotelna_user:
    build:
      context: ./HOTELNA_USER
      dockerfile: Dockerfile
    container_name: user
    hostname: user               # ✅ set the container's hostname
    ports:
      - "8090:8090"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - hotelna-net
    environment:
      # Database
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/hotelna?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      # Config Server
      SPRING_CLOUD_CONFIG_ENABLED: "true"
      SPRING_CONFIG_IMPORT: "optional:configserver:http://host.docker.internal:8888"

      # Eureka
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://host.docker.internal:8761/eureka"
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "false"  # ✅ tell Eureka to use the hostname

      # Force Spring to use hostname and not fallback to IP/DNS
      JAVA_TOOL_OPTIONS: >
        -Deureka.instance.hostname=localhost
        -Deureka.instance.prefer-ip-address=false
        -Deureka.instance.use-ip-address=false

      # Port
      SERVER_PORT: 8090

networks:
  hotelna-net:
    driver: bridge
